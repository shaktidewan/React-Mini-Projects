{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\97798\\\\Desktop\\\\Web Development\\\\React\\\\reaching_web\\\\src\\\\container\\\\Blog\\\\FullPost\\\\FullPost.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './FullPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FullPost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadedPost: null\n    };\n\n    this.deletePostHandler = () => {\n      axios.delete('/posts' + this.props.match.params.id).then(response => {\n        console.log(response);\n      });\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.loadData();\n  }\n\n  componentDidUpdate() {\n    this.loadData();\n  }\n\n  loadData() {\n    if (this.props.match.params.id) {\n      if (!this.state.loadedPost || this.state.loadedPost && this.state.loadedPost.id != this.props.match.params.id) {\n        axios.get('/posts/' + this.props.match.params.id).then(response => {\n          // console.log(resposne)\n          this.setState({\n            loadedPost: response.data\n          });\n        });\n      }\n    }\n  } // IN console website, look network where we have request infinte time i.e. infinite loops because of\n  // this.setState({loadedPost: response.data});\n  // we are continously updating state\n\n\n  render() {\n    let post = /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Please select a Post!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 20\n    }, this); //ERROR REMOVING\n\n\n    if (this.props.match.params.id) {\n      post = /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 20\n      }, this);\n    }\n\n    if (this.state.loadedPost) {\n      post = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"FullPost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.loadedPost.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"l\", this.state.loadedPost.body]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Edit\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Delete\",\n            onClick: this.deletePostHandler,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this);\n    } //NULL TITLE ERROR KINA AYO VANE... componentDidUpdate() vanda aagi nai \n    //yo tala ko if wala statement run vayo jun ma {this.state.loadedPost.title}, loadedPost null nai hunxa\n    // if(this.props.id){\n    //     post = (\n    //         <div className=\"FullPost\">\n    //             <h1>{this.state.loadedPost.title}</h1>\n    //             <p>l{this.state.loadedPost.content}</p>\n    //             <div className=\"Edit\">\n    //                 <button className=\"Delete\">Delete</button>\n    //             </div>\n    //         </div>  \n    //     );\n    // }     \n\n\n    return post;\n  }\n\n}\n\nexport default FullPost;","map":{"version":3,"sources":["C:/Users/97798/Desktop/Web Development/React/reaching_web/src/container/Blog/FullPost/FullPost.js"],"names":["React","Component","axios","FullPost","state","loadedPost","deletePostHandler","delete","props","match","params","id","then","response","console","log","componentDidMount","loadData","componentDidUpdate","get","setState","data","render","post","textAlign","title","body"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,gBAAP;;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BG,KAD6B,GACrB;AACJC,MAAAA,UAAU,EAAE;AADR,KADqB;;AAAA,SAgC7BC,iBAhC6B,GAgCT,MAAM;AACtBJ,MAAAA,KAAK,CAACK,MAAN,CAAa,WAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9C,EACCC,IADD,CACMC,QAAQ,IAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,OAHD;AAIH,KArC4B;AAAA;;AAI7BG,EAAAA,iBAAiB,GAAE;AACfF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAjB;AACA,SAAKS,QAAL;AAEH;;AAEDC,EAAAA,kBAAkB,GAAG;AACjB,SAAKD,QAAL;AACH;;AAEDA,EAAAA,QAAQ,GAAE;AACN,QAAG,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3B,EAA8B;AAC1B,UAAI,CAAC,KAAKP,KAAL,CAAWC,UAAZ,IAA2B,KAAKD,KAAL,CAAWC,UAAX,IAAyB,KAAKD,KAAL,CAAWC,UAAX,CAAsBM,EAAtB,IAA4B,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5G,EAA+G;AAC3GT,QAAAA,KAAK,CAACiB,GAAN,CAAU,YAAU,KAAKX,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA5C,EACCC,IADD,CACMC,QAAQ,IAAI;AACd;AACA,eAAKO,QAAL,CAAc;AAACf,YAAAA,UAAU,EAAEQ,QAAQ,CAACQ;AAAtB,WAAd;AACH,SAJD;AAKH;AAEJ;AACJ,GAzB4B,CA2B7B;AACA;AACA;;;AASAC,EAAAA,MAAM,GAAI;AACN,QAAIC,IAAI,gBAAG;AAAG,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAC;AAAX,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAX,CADM,CAEN;;;AACA,QAAG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAA3B,EAA8B;AAC1BY,MAAAA,IAAI,gBAAG;AAAG,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAC;AAAX,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH;;AACD,QAAG,KAAKpB,KAAL,CAAWC,UAAd,EAAyB;AACrBkB,MAAAA,IAAI,gBACA;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAA,oBAAK,KAAKnB,KAAL,CAAWC,UAAX,CAAsBoB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,0BAAK,KAAKrB,KAAL,CAAWC,UAAX,CAAsBqB,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,iCACI;AAAQ,YAAA,SAAS,EAAC,QAAlB;AAA2B,YAAA,OAAO,EAAE,KAAKpB,iBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AASH,KAhBK,CAiBN;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,WAAOiB,IAAP;AACH;;AAtE4B;;AAyEjC,eAAepB,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './FullPost.css';\r\n\r\nclass FullPost extends Component {\r\n    state = {\r\n        loadedPost: null,\r\n    }\r\n    componentDidMount(){\r\n        console.log(this.props)\r\n        this.loadData();\r\n        \r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData(){\r\n        if(this.props.match.params.id){\r\n            if( !this.state.loadedPost ||  this.state.loadedPost && this.state.loadedPost.id != this.props.match.params.id){\r\n                axios.get('/posts/'+this.props.match.params.id)\r\n                .then(response => {\r\n                    // console.log(resposne)\r\n                    this.setState({loadedPost: response.data});\r\n                });\r\n            }\r\n           \r\n        }\r\n    }\r\n\r\n    // IN console website, look network where we have request infinte time i.e. infinite loops because of\r\n    // this.setState({loadedPost: response.data});\r\n    // we are continously updating state\r\n\r\n\r\n    deletePostHandler = () => {\r\n        axios.delete('/posts'+this.props.match.params.id)\r\n        .then(response => {\r\n            console.log(response);\r\n        });\r\n    }\r\n    render () {\r\n        let post = <p style={{textAlign:'center'}}>Please select a Post!</p>;\r\n        //ERROR REMOVING\r\n        if(this.props.match.params.id){\r\n            post = <p style={{textAlign:'center'}}>Loading...</p>;\r\n        }\r\n        if(this.state.loadedPost){\r\n            post = (\r\n                <div className=\"FullPost\">\r\n                    <h1>{this.state.loadedPost.title}</h1>\r\n                    <p>l{this.state.loadedPost.body}</p>\r\n                    <div className=\"Edit\">\r\n                        <button className=\"Delete\" onClick={this.deletePostHandler}>Delete</button>\r\n                    </div>\r\n                </div>  \r\n            );\r\n        }  \r\n        //NULL TITLE ERROR KINA AYO VANE... componentDidUpdate() vanda aagi nai \r\n        //yo tala ko if wala statement run vayo jun ma {this.state.loadedPost.title}, loadedPost null nai hunxa\r\n\r\n        // if(this.props.id){\r\n        //     post = (\r\n        //         <div className=\"FullPost\">\r\n        //             <h1>{this.state.loadedPost.title}</h1>\r\n        //             <p>l{this.state.loadedPost.content}</p>\r\n        //             <div className=\"Edit\">\r\n        //                 <button className=\"Delete\">Delete</button>\r\n        //             </div>\r\n        //         </div>  \r\n        //     );\r\n        // }     \r\n        return post;\r\n    }\r\n}\r\n\r\nexport default FullPost;"]},"metadata":{},"sourceType":"module"}